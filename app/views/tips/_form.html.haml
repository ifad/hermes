.control-group
  = f.label :title, class: 'control-label'
  .controls
    = f.text_field :title, :class => 'input-block-level'
.control-group
  = f.label :content, class: 'control-label'
  .controls
    = f.text_area :content, :class => 'input-block-level wysihtml5', :rows => 8
.control-group
  = f.label :path, class: 'control-label'
  .controls
    = f.text_field :path, 'data-tip-connect-path' => '#tip-connector', class: 'input-block-level'
.control-group
  %label.control-label
    Layout type
  .controls
    %div{"data-toggle-group" => ""}

      %label.radio
        %input#tip-disconnect{"data-output" => "#tip-connected", :name => "broadcast", :type => "radio", checked: f.object.selector.blank?}
        Broadcast


      %label.radio
        %input{"data-output" => "#tip-connector", :name => "broadcast", :type => "radio", checked: f.object.selector.present?}
        Bound to a specific item in the page

        = link_to 'Connect', [f.object.tippable.url, f.object.path, @tip_connector_token].join, :id => 'tip-connector', 'target' => '_blank', :class => f.object.selector.blank? ? '' : '', :'data-togglee'  => true, :'data-hostname' => f.object.tippable.url, :'data-token' => @tip_connector_token, :'data-output' => '#tip-connected'

        %span#tip-connected{:class => f.object.selector.blank? ? 'hide' : ''}
          %i.icon.icon-ok
          Connected!
          = f.hidden_field :selector

.control-group
  = f.label :published_at, 'Publishing starts', class: 'control-label'
  .controls.datetimepicker
    = f.text_field :published_at, 'data-format' => "yyyy-MM-dd hh:mm:ss"
    %span.add-on
      %i{"data-date-icon" => "icon-calendar", "data-time-icon" => "icon-time"}
.control-group
  = f.label :unpublished_at, 'Publishing ends', class: 'control-label'
  .controls.datetimepicker
    = f.text_field :unpublished_at, 'data-format' => "yyyy-MM-dd hh:mm:ss"
    %span.add-on
      %i{"data-date-icon" => "icon-calendar", "data-time-icon" => "icon-time"}
- if f.object.persisted?
  .control-group
    .controls
      = f.label :redisplay, :class => 'checkbox' do
        = f.check_box :redisplay
        Check to redisplay the message
.form-actions
  - if f.object.persisted?
    = f.button 'Update message', class: 'btn btn-primary'
  - else
    = f.button 'Create new message', class: 'btn btn-primary'
